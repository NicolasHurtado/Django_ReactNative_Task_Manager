version: '3.8'

services:
  # Database service
  db:
    image: postgres:14
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
      - DJANGO_SUPERUSER_PASSWORD=admin123
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    command: >
      sh -c "python wait_for_db.py &&
             python manage.py migrate &&
             python create_superuser.py &&
             python manage.py collectstatic --noinput &&
             gunicorn task_manager.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    networks:
      - app-network

  # Nginx to serve static  files and proxy to backend
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/home/app/staticfiles
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume: 